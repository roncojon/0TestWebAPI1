// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _0TestWebAPI1.Data;

namespace _0TestWebAPI1.Migrations
{
    [DbContext(typeof(PruebasDbContext))]
    [Migration("20220702010024_ImprovedModels2")]
    partial class ImprovedModels2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("_0TestWebAPI1.Models.Centro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Centro");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.Escolaridad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("NivelEscolar")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Escolaridad");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.GrupoEtario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Grupo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GrupoEtario");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.PruebaBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Anotaciones")
                        .HasColumnType("int");

                    b.Property<int>("Errores")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Filas")
                        .HasColumnType("int");

                    b.Property<int>("Intentos")
                        .HasColumnType("int");

                    b.Property<int>("Omisiones")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PruebaBase");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.PruebaDeCaritas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("CalidadDeLaAtencion")
                        .HasColumnType("float");

                    b.Property<double>("DatosAtencion")
                        .HasColumnType("float");

                    b.Property<double>("EficaciaAtencional")
                        .HasColumnType("float");

                    b.Property<double>("EficienciaAtencional")
                        .HasColumnType("float");

                    b.Property<double>("ICI")
                        .HasColumnType("float");

                    b.Property<double>("IGAP")
                        .HasColumnType("float");

                    b.Property<double>("PorCientoDeAciertos")
                        .HasColumnType("float");

                    b.Property<int>("PruebaBaseId")
                        .HasColumnType("int");

                    b.Property<double>("RendimientoAtencional")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("PruebaBaseId");

                    b.ToTable("PruebaCaritas");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NombreDelRol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ci")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("EscolaridadId")
                        .HasColumnType("int");

                    b.Property<int>("GrupoEtarioId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<bool>("Sexo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EscolaridadId");

                    b.HasIndex("GrupoEtarioId");

                    b.HasIndex("RolId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.UsuarioCentro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CentroId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CentroId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCentro");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.UsuarioPruebaBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("PruebaBaseId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PruebaBaseId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPruebaBase");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.PruebaDeCaritas", b =>
                {
                    b.HasOne("_0TestWebAPI1.Models.PruebaBase", "PruebaBase")
                        .WithMany()
                        .HasForeignKey("PruebaBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PruebaBase");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.Usuario", b =>
                {
                    b.HasOne("_0TestWebAPI1.Models.Escolaridad", "Escolaridad")
                        .WithMany()
                        .HasForeignKey("EscolaridadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_0TestWebAPI1.Models.GrupoEtario", "GrupoEtario")
                        .WithMany()
                        .HasForeignKey("GrupoEtarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_0TestWebAPI1.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escolaridad");

                    b.Navigation("GrupoEtario");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.UsuarioCentro", b =>
                {
                    b.HasOne("_0TestWebAPI1.Models.Centro", "Centro")
                        .WithMany()
                        .HasForeignKey("CentroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_0TestWebAPI1.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Centro");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("_0TestWebAPI1.Models.UsuarioPruebaBase", b =>
                {
                    b.HasOne("_0TestWebAPI1.Models.PruebaBase", "PruebaBase")
                        .WithMany()
                        .HasForeignKey("PruebaBaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_0TestWebAPI1.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PruebaBase");

                    b.Navigation("Usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
